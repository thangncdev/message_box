import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:message_box/l10n/app_localizations.dart';
import 'package:message_box/presentation/providers.dart';
import 'package:message_box/presentation/widgets/base_app_bar.dart';
import 'package:message_box/presentation/widgets/base_screen.dart';

// Quotes in English + Vietnamese (3 per category)
// Categories + Quotes with EN + VI
final Map<Map<String, String>, List<Map<String, String>>>
quotesByCategory = const {
  {"en": "üå± Life & Growth", "vi": "üå± Cu·ªôc s·ªëng & Ph√°t tri·ªÉn"}: [
    {
      "en": "Be yourself; everyone else is already taken.",
      "vi": "H√£y l√† ch√≠nh m√¨nh; t·∫•t c·∫£ nh·ªØng ng∆∞·ªùi kh√°c ƒë√£ c√≥ b·∫£n sao r·ªìi.",
    },
    {
      "en": "In the middle of every difficulty lies opportunity.",
      "vi": "Trong m·ªói kh√≥ khƒÉn ƒë·ªÅu ·∫©n ch·ª©a c∆° h·ªôi.",
    },
    {
      "en": "Do what you can, with what you have, where you are.",
      "vi":
          "H√£y l√†m nh·ªØng g√¨ b·∫°n c√≥ th·ªÉ, v·ªõi nh·ªØng g√¨ b·∫°n c√≥, ·ªü n∆°i b·∫°n ƒëang ƒë·ª©ng.",
    },
    {
      "en":
          "The only difference between a good day and a bad day is your attitude.",
      "vi":
          "S·ª± kh√°c bi·ªát gi·ªØa m·ªôt ng√†y tuy·ªát v·ªùi v√† m·ªôt ng√†y t·ªá l√† ·ªü suy nghƒ© v√† g√≥c nh√¨n c·ªßa b·∫°n.",
    },
    {
      "en": "If you can dream it, you can do it",
      "vi": "N·∫øu b·∫°n c√≥ th·ªÉ m∆°, b·∫°n c√≥ th·ªÉ l√†m ƒë∆∞·ª£c.",
    },
  ],
  {"en": "üí™ Courage & Resilience", "vi": "üí™ D≈©ng c·∫£m & Ki√™n c∆∞·ªùng"}: [
    {
      "en": "It always seems impossible until it‚Äôs done.",
      "vi": "M·ªçi th·ª© lu√¥n c√≥ v·∫ª b·∫•t kh·∫£ thi cho ƒë·∫øn khi n√≥ ho√†n th√†nh.",
    },
    {
      "en": "Fall seven times and stand up eight.",
      "vi": "Ng√£ b·∫£y l·∫ßn, ƒë·ª©ng d·∫≠y t√°m l·∫ßn.",
    },
    {
      "en": "Courage is not the absence of fear, but the triumph over it.",
      "vi": "D≈©ng c·∫£m kh√¥ng ph·∫£i l√† kh√¥ng c√≥ s·ª£ h√£i, m√† l√† chi·∫øn th·∫Øng n√≥.",
    },
  ],
  {"en": "üß† Wisdom & Perspective", "vi": "üß† Tr√≠ tu·ªá & G√≥c nh√¨n"}: [
    {
      "en": "Knowing yourself is the beginning of all wisdom.",
      "vi": "Hi·ªÉu r√µ ch√≠nh m√¨nh l√† kh·ªüi ƒë·∫ßu c·ªßa m·ªçi tr√≠ tu·ªá.",
    },
    {
      "en": "Happiness depends upon ourselves.",
      "vi": "H·∫°nh ph√∫c ph·ª• thu·ªôc v√†o ch√≠nh ch√∫ng ta.",
    },
    {
      "en":
          "Do not go where the path may lead, go instead where there is no path and leave a trail.",
      "vi":
          "ƒê·ª´ng ƒëi theo con ƒë∆∞·ªùng c√≥ s·∫µn, h√£y ƒëi n∆°i ch∆∞a c√≥ ƒë∆∞·ªùng v√† ƒë·ªÉ l·∫°i d·∫•u v·∫øt.",
    },
    {
      "en": "Life is short, do not waste it on meaningless things",
      "vi": "Cu·ªôc ƒë·ªùi ng·∫Øn ng·ªßi, ƒë·ª´ng l√£ng ph√≠ n√≥ v√†o nh·ªØng ƒëi·ªÅu v√¥ nghƒ©a",
    },
  ],
  {"en": "üåç Inspiration & Legacy", "vi": "üåç Truy·ªÅn c·∫£m h·ª©ng & Di s·∫£n"}: [
    {
      "en": "Be the change that you wish to see in the world.",
      "vi": "H√£y tr·ªü th√†nh s·ª± thay ƒë·ªïi m√† b·∫°n mu·ªën th·∫•y trong th·∫ø gi·ªõi n√†y.",
    },
    {
      "en": "The best way to predict the future is to invent it.",
      "vi": "C√°ch t·ªët nh·∫•t ƒë·ªÉ d·ª± ƒëo√°n t∆∞∆°ng lai l√† t·∫°o ra n√≥.",
    },
    {
      "en":
          "What you do makes a difference, and you have to decide what kind of difference you want to make.",
      "vi":
          "Nh·ªØng g√¨ b·∫°n l√†m ƒë·ªÅu t·∫°o ra s·ª± kh√°c bi·ªát, v√† b·∫°n ph·∫£i quy·∫øt ƒë·ªãnh b·∫°n mu·ªën t·∫°o ra s·ª± kh√°c bi·ªát nh∆∞ th·∫ø n√†o.",
    },
  ],
};

class SuggestionQuotesScreen extends ConsumerWidget {
  const SuggestionQuotesScreen({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final appState = ref.watch(appProvider);
    final currentLocale = appState.locale;

    return BaseScrollableScreen(
      appBar: GradientAppBar(
        title: AppLocalizations.of(context)!.suggestedMessages,
      ),
      padding: const EdgeInsets.all(16),
      children: [
        const SizedBox(height: 8),

        ...quotesByCategory.entries.map((entry) {
          final category = entry.key;
          final quotes = entry.value;

          return ExpansionTile(
            title: Text(
              category[currentLocale?.languageCode ?? "en"] ?? "",
              style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
            ),
            children: quotes.map((quote) {
              return ListTile(
                title: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Expanded(
                      child: Text(
                        quote[currentLocale?.languageCode ?? "en"] ?? "",
                        style: const TextStyle(fontSize: 16),
                      ),
                    ),
                    IconButton(
                      onPressed: () {
                        Clipboard.setData(
                          ClipboardData(
                            text:
                                quote[currentLocale?.languageCode ?? "en"] ??
                                "",
                          ),
                        );
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text(
                              AppLocalizations.of(context)!.copiedClipboard,
                            ),
                          ),
                        );
                      },
                      icon: Icon(Icons.copy),
                    ),
                  ],
                ),
              );
            }).toList(),
          );
        }),
      ],
    );
  }
}
